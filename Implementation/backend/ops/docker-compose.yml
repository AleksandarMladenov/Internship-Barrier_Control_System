version: "3.9"

services:
  db:
    image: postgres:16
    env_file:
      - ../app/.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  api:
    build:
      context: ..
      dockerfile: ops/Dockerfile.api
    env_file:
      - ../app/.env
    environment:
      PYTHONPATH: /app
    volumes:
      # mount the whole app folder into the container
      - ../app:/app
      # mount the firebase cred to the right place in your tree

    depends_on:
      - db
    ports:
      - "${APP_PORT:-8000}:8000"
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  ocr:
    build:
      context: .
      dockerfile: Dockerfile.ocr
    container_name: ops-ocr
    environment:
      - API_BASE=http://api:8000        # talk to your API by service name
      - REGION_CODE=BG
      - GATE_ID=GATE-A
      - MODE=entry                      # change to "exit" for exit flow
      - YOLO_WEIGHTS=/assets/best.pt
      - YOLO_CONF=0.5
      - FRAME_SKIP=2
      - STABLE_FRAMES=3
      - COOLDOWN_SEC=10
      # - PLATE_REGEX=^[A-Z0-9]{5,10}$  # (optional) looser regex for bring-up
    volumes:
      - ./ocr_assets:/assets:ro         # ops/ocr_assets -> /assets in container
    command: ["python", "lp_recognizer.py", "--video", "/assets/entry_demo.mp4"]
    depends_on:
      - api

volumes:
  db_data: {}
